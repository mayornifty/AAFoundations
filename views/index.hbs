<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="styles.css">
    <!-- Include DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
    <div class="container">
        <h1>Welcome to Your Dashboard</h1>

        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header text-white bg-blue d-flex justify-content-between">
                        <div>Beneficiaries</div>
                        <div id="TotalBenAMT">Total Amount Spent: $00</div>
                    </div>
                    <div class="card-body">
                        <blockquote class="blockquote mb-0">
                            <p id="totalBeneficiaries">Loading...</p>
                        </blockquote>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header text-white bg-green d-flex justify-content-between">
                        <div>Education</div>
                        <div id="EduAMT">Amount Spent: $00</div>
                    </div>
                    <div class="card-body">
                        <blockquote class="blockquote mb-0">
                            <p id="totalPayments">Loading...</p>
                        </blockquote>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header text-white bg-purple d-flex justify-content-between">
                        <div>Health Care</div>
                        <div id="HealthAMT">Amount Spent: $0.00</div>
                    </div>
                    <div class="card-body">
                        <blockquote class="blockquote mb-0">
                            <p id="totalMedicals">Loading...</p>
                        </blockquote>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header text-white bg-orange d-flex justify-content-between">
                        <div>Donations</div>
                        <div id="DonAMT">Amount Spent: $0.00</div>
                    </div>
                    <div class="card-body">
                        <blockquote class="blockquote mb-0">
                            <p id="totalDonations">Loading...</p>
                        </blockquote>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header text-white bg-green d-flex justify-content-between">
                        <div>Entrepreneurial Support</div>
                        <div>Amount Spent: $00</div>
                    </div>
                    <div class="card-body">
                        <blockquote class="blockquote mb-0">
                            <p id="totalProject">Loading...</p>
                        </blockquote>
                    </div>
                </div>
            </div>

            <div class="col-md-6 mb-4">
                <div class="card">
                    <div class="card-header text-white bg-blue d-flex justify-content-between">
                        <div>Projects</div>
                        <div>Amount Spent: $00</div>
                    </div>
                    <div class="card-body">
                        <blockquote class="blockquote mb-0">
                            <p id="totalProject">Jesuit College  |  Drainages  |  Boreholes</p>
                        </blockquote>
                    </div>
                </div>
            </div>
        </div>

        <div class="charts">
            <canvas id="paymentsChart"></canvas>
            <canvas id="donationsChart"></canvas>
            <canvas id="medicalChart"></canvas>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- Include DataTables JavaScript -->
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const apiUrl = "/api";

            // Function to fetch data and handle errors
            async function fetchData(endpoint) {
                try {
                    const response = await fetch(apiUrl + endpoint);
                    const result = await response.json();
                    return result.data;
                } catch (error) {
                    console.error(`Error fetching data from ${endpoint}:`, error);
                    return null;
                }
            }

            // Fetch and display the total Amounts
            function displayTotalAmounts() {
                fetchData("/beneficiaries").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalBeneficiaries").textContent = `Total Beneficiaries: ${data.length}`;
                    }
                });

                fetchData("/payments").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalPayments").textContent = `Total Student Payments: ${data.length}`;
                    }
                });

                fetchData("/medical-records").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalMedicals").textContent = `Medical Beneficiaries: ${data.length}`;
                    }
                });

                fetchData("/donations").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalDonations").textContent = `Total Cash Donations: ${data.length}`;
                    }
                });
            }

            // Fetch and display the total counts
            function displayTotalCounts() {
                fetchData("/beneficiaries").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalBeneficiaries").textContent = `Total Beneficiaries: ${data.length}`;
                    }
                });

                fetchData("/payments").then(data => {
                    if (Array.isArray(data)) {
                        // Calculate the total sum of total_amount
                        const totalAmount = data.reduce((sum, payment) => {
                            return sum + parseFloat(payment.total_amount.$numberDecimal);
                        }, 0);

                        document.getElementById("totalPayments").textContent = `Total Funding: ${totalAmount.toLocaleString()} Naira`;
                        document.getElementById("EduAMT").textContent = `Total Funding: ${totalAmount.toLocaleString()} Naira`;
                    }
                });

                fetchData("/medical-records").then(data => {
                    if (Array.isArray(data)) {
                        // Calculate the total sum of line_total
                        const totalMedicals = data.reduce((sum, medical) => {
                            return sum + parseFloat(medical.line_total.$numberDecimal);
                        }, 0);

                        document.getElementById("totalMedicals").textContent = `Total Medical Costs: ${totalMedicals.toLocaleString()} Naira`;
                        document.getElementById("HealthAMT").textContent = `Amount Spent: ${totalMedicals.toLocaleString()} Naira`;
                    }
                });

                fetchData("/donations").then(data => {
                    if (Array.isArray(data)) {
                        // Calculate the total sum of amounts
                        const totalAmount = data.reduce((sum, donation) => {
                            return sum + parseFloat(donation.amount.$numberDecimal);
                        }, 0);

                        document.getElementById("totalDonations").textContent = `Total Cash Donations: ${totalAmount.toLocaleString()} Naira`;
                        document.getElementById("DonAMT").textContent = `Total Cash Donations: ${totalAmount.toLocaleString()} Naira`;
                    }
                });
            }

            // Fetch and display the total amounts for Beneficiaries
            function displayTotalBenAMT() {
                fetchData("/beneficiaries").then(beneficiariesData => {
                    fetchData("/medical-records").then(medicalsData => {
                        fetchData("/payments").then(paymentsData => {
                            fetchData("/donations").then(donationsData => {
                                if (Array.isArray(beneficiariesData) && Array.isArray(medicalsData) && Array.isArray(paymentsData) && Array.isArray(donationsData)) {
                                    const totalBenAMT = [
                                        ...medicalsData.map(record => parseFloat(record.line_total.$numberDecimal)),
                                        ...paymentsData.map(payment => parseFloat(payment.total_amount.$numberDecimal)),
                                        ...donationsData.map(donation => parseFloat(donation.amount.$numberDecimal))
                                    ].reduce((sum, amount) => sum + amount, 0);

                                    document.getElementById("TotalBenAMT").textContent = `Total Amount Spent: ${totalBenAMT.toLocaleString()} Naira`;
                                }
                            });
                        });
                    });
                });
            }

            // Responsive Chart for Payments
            const paymentsCtx = document.getElementById("paymentsChart").getContext("2d");
            fetchData("/payments").then(data => {
                if (Array.isArray(data)) {
                    const institutions = {};
                           data.forEach(payment => {
                        institutions[payment.institution_name] = (institutions[payment.institution_name] || 0) + 1;
                    });

                    const labels = Object.keys(institutions);
                    const amounts = Object.values(institutions);

                    new Chart(paymentsCtx, {
                        type: "bar",
                        data: {
                            labels,
                            datasets: [{
                                label: "Total Amount",
                                data: amounts,
                                backgroundColor: "rgba(75, 192, 192, 0.2)",
                                borderColor: "rgba(75, 192, 192, 1)",
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            });

            // Pie Chart for Donations by Donor
            const donationsCtx = document.getElementById("donationsChart").getContext("2d");
            fetchData("/donations").then(data => {
                if (Array.isArray(data)) {
                    const donors = {};
                    data.forEach(donation => {
                        const donor = donation.donor;
                        const amount = parseFloat(donation.amount.$numberDecimal);
                        if (!donors[donor]) {
                            donors[donor] = 0;
                        }
                        donors[donor] += amount;
                    });

                    const labels = Object.keys(donors);
                    const amounts = Object.values(donors);

                    new Chart(donationsCtx, {
                        type: "pie",
                        data: {
                            labels,
                            datasets: [{
                                label: "Donations by Donor",
                                data: amounts,
                                backgroundColor: [
                                    "rgba(255, 99, 132, 0.2)",
                                    "rgba(54, 162, 235, 0.2)",
                                    "rgba(255, 206, 86, 0.2)",
                                    "rgba(75, 192, 192, 0.2)",
                                    "rgba(153, 102, 255, 0.2)"
                                ],
                                borderColor: [
                                    "rgba(255, 99, 132, 1)",
                                    "rgba(54, 162, 235, 1)",
                                    "rgba(255, 206, 86, 1)",
                                    "rgba(75, 192, 192, 1)",
                                    "rgba(153, 102, 255, 1)"
                                ],
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true
                        }
                    });
                }
            });

            // Line Chart for Medical Records by Date
            const medicalCtx = document.getElementById("medicalChart").getContext("2d");
            fetchData("/medical-records").then(data => {
                if (Array.isArray(data)) {
                    const dates = {};
                    data.forEach(record => {
                        const date = record.date.substring(0, 10); // Extract date part only
                        const amount = parseFloat(record.line_total.$numberDecimal);
                        if (!dates[date]) {
                            dates[date] = 0;
                        }
                        dates[date] += amount;
                    });

                    const labels = Object.keys(dates);
                    const amounts = Object.values(dates);

                    new Chart(medicalCtx, {
                        type: "line",
                        data: {
                            labels,
                            datasets: [{
                                label: "Medical Costs by Date",
                                data: amounts,
                                backgroundColor: "rgba(153, 102, 255, 0.2)",
                                borderColor: "rgba(153, 102, 255, 1)",
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            });

            // Display the total counts and amounts
            displayTotalCounts();
            displayTotalAmounts();
            displayTotalBenAMT();
        });
    </script>
</body>
</html>