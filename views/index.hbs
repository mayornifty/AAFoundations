<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard</title>
    <link rel="stylesheet" href="styles.css">
    <!-- Include DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.4/css/jquery.dataTables.min.css">
</head>
<body>
    <div class="container">
        <h1>Welcome to Your Dashboard</h1>

        
  <div class="row">
    <div class="col-md-6 mb-4">
      <div class="card">
         <div class="card-header text-white bg-blue d-flex justify-content-between" >
          <div>
            Beneficiaries
          </div>
          <div>
            Total Amount Spent: $100
          </div>
          </div>
          
        <div class="card-body">
          <blockquote class="blockquote mb-0">
            <p id="totalBeneficiaries">Loading...</p>
          </blockquote>
        </div>
      </div>
    </div>

    <div class="col-md-6 mb-4">
      <div class="card">
         <div class="card-header text-white bg-green d-flex justify-content-between" >
          <div>
            Education
          </div><div  id="EduAMT">Amount Spent: $100</div>
          
        </div>
        <div class="card-body">
          <blockquote class="blockquote mb-0">
            <p id="totalPayments">Loading...</p>
          </blockquote>
        </div>
      </div>
    </div>

    <div class="col-md-6 mb-4">
      <div class="card">
        <div class="card-header text-white bg-purple d-flex justify-content-between" >
          <div> Health Care</div>
          <div id="HealthAMT">Amount Spent: $0.00</div>
         
        </div>
        <div class="card-body">
          <blockquote class="blockquote mb-0">
            <p id="totalMedicals">Loading...</p>
          </blockquote>
        </div>
      </div>
    </div>

    <div class="col-md-6 mb-4">
      <div class="card">
        <div class="card-header text-white bg-orange d-flex justify-content-between" >
         <div> Donations</div>
          <div id="DonAMT">Amount Spent: $0.00</div>
        </div>
        <div class="card-body">
          <blockquote class="blockquote mb-0">
            <p id="totalDonations">Loading...</p>
          </blockquote>
        </div>
      </div>
    </div>
  </div>





<div class="row">
    <div class="col-md-6 mb-4">
      <div class="card">
        <div class="card-header text-white bg-green d-flex justify-content-between">
            <div>Entrepreneurial Support</div>
            <div>Amount Spent: $100</div>
        </div>
        <div class="card-body">
          <blockquote class="blockquote mb-0">
            <p id="totalProject">Loading...</p>
          </blockquote>
        </div>
      </div>
    </div>

    <div class="col-md-6 mb-4">
      <div class="card">
          <div class="card-header text-white bg-blue d-flex justify-content-between">
            <div>Projects</div>
            <div>Amount Spent: $100</div>
        </div>
        <div class="card-body">
          <blockquote class="blockquote mb-0">
            <p id="totalProject">
              
        Jesuit College  |  Drainages  |  Boreholes
            </p>
          </blockquote>
        </div>
      </div>
    </div>   
  </div>




</div>

        <div class="charts">
            <canvas id="paymentsChart"></canvas>
        </div>
    </div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- Include DataTables JavaScript -->
    <script src="https://cdn.datatables.net/1.11.4/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const apiUrl = "/api";

            // Function to fetch data and handle errors
            async function fetchData(endpoint) {
                try {
                    const response = await fetch(apiUrl + endpoint);
                    const result = await response.json();
                    return result.data;
                } catch (error) {
                    console.error(`Error fetching data from ${endpoint}:`, error);
                    return null;
                }
            }
 // Fetch and display the total Amounts
            function displayTotalAmounts() {
                fetchData("/beneficiaries").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalBeneficiaries").textContent = `Total Beneficiaries: ${data.length}`;
                    }
                });

                fetchData("/payments").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalPayments").textContent = `Total Student Payments: ${data.length}`;
                    }
                });

                fetchData("/medical-records").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalMedicals").textContent = `Medical Beneficiaries: ${data.length}`;
                    }
                });

                fetchData("/donations").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalDonations").textContent = `Total Cash Donations: ${data.length}`;
                    }
                });
            }

            // Fetch and display the total counts
            function displayTotalCounts() {
                fetchData("/beneficiaries").then(data => {
                    if (Array.isArray(data)) {
                        document.getElementById("totalBeneficiaries").textContent = `Total Beneficiaries: ${data.length}`;
            
                    }
                });

                fetchData("/payments").then(data => {
        if (Array.isArray(data)) {
            // Calculate the total sum of total_amount
            const totalAmount = data.reduce((sum, payment) => {
                return sum + parseFloat(payment.total_amount.$numberDecimal);
            }, 0);

            document.getElementById("totalPayments").textContent = `Total Funding: ${totalAmount.toLocaleString()} Naira`;
        document.getElementById("EduAMT").textContent = `Total Funding: ${totalAmount.toLocaleString()} Naira`;
        }
    });

                fetchData("/medical-records").then(data => {
        if (Array.isArray(data)) {
            // Calculate the total sum of line_total
            const totalMedicals = data.reduce((sum, medical) => {
                return sum + parseFloat(medical.line_total.$numberDecimal);
            }, 0);

            document.getElementById("totalMedicals").textContent = `Total Medical Costs: ${totalMedicals.toLocaleString()} Naira`;
        
            document.getElementById("HealthAMT").textContent = `Amount Spent: ${totalMedicals.toLocaleString()} Naira`;
        }
    });

                fetchData("/donations").then(data => {
                    if (Array.isArray(data))  {
            // Calculate the total sum of amounts
            const totalAmount = data.reduce((sum, donation) => {
                return sum + parseFloat(donation.amount.$numberDecimal);
            }, 0);

            document.getElementById("totalDonations").textContent = `Total Cash Donations: ${totalAmount.toLocaleString()} Naira`;
        document.getElementById("DonAMT").textContent = `Total Cash Donations: ${totalAmount.toLocaleString()} Naira`;
        }
                });
            }

            // Responsive Chart for Payments
            const paymentsCtx = document.getElementById("paymentsChart").getContext("2d");
            fetchData("/payments").then(data => {
                if (Array.isArray(data)) {
                    const institutions = {};
                    data.forEach(payment => {
                        institutions[payment.institution_name] = (institutions[payment.institution_name] || 0) + 1;
                    });
                    const labels = Object.keys(institutions);
                    const values = Object.values(institutions);

                    new Chart(paymentsCtx, {
                        type: "bar",
                        data: {
                            labels: labels,
                            datasets: [{
                                label: "Payments by Institution",
                                data: values,
                                backgroundColor: ["#FF6384", "#36A2EB", "#FFCE56", "#4BC0C0", "#9966FF"]
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                x: {
                                    beginAtZero: true
                                },
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                }
            });

            // Initial data load
            displayTotalCounts();
        });
    </script>
</body>
</html>
